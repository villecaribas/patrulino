<blocks app="Snap! 10.1-dev, https://snap.berkeley.edu" version="2"><palette><category name="EUREKA Conexoes" color="16,179,0,1"/></palette><block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $ESPaceLINO-0.681 $nl Abrir conexao: %&apos;conexao&apos; tipo: %&apos;conn&apos;" type="command" category="other"><header></header><code></code><translations></translations><inputs><input type="%txt" initial="1">LINO<options>§_getVarNamesDict</options></input><input type="%obj" initial="1"></input></inputs><script><block s="doIf"><block s="reportNot"><custom-block s="does var %s exist?"><block var="conexao"/></custom-block></block><script><custom-block s="create %s var %mult%txt"><l>global</l><list><block var="conexao"/></list></custom-block></script><list></list></block><custom-block s="set var %s to %s"><block var="conexao"/><block var="conn"/></custom-block></script></block-definition><block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $ESPaceLINO-0.681 $nl Conexao Bluetooth %&apos;bluetooth&apos;" type="reporter" category="other"><header></header><code></code><translations></translations><inputs><input type="%txt" initial="1">LINO</input></inputs><script><block s="doReport"><custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $BluetoothBLE-0.681 %br abrir conexão com BLE %s"><block var="bluetooth"/></custom-block></block></script></block-definition><block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $ESPaceLINO-0.681 $nl Conexao IP %&apos;hIP&apos; . %&apos;tIP&apos;" type="reporter" category="other"><header></header><code></code><translations></translations><inputs><input type="%txt" initial="1">192.168.100</input><input type="%n" initial="1">33</input></inputs><script><block s="doReport"><custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $ESPaceLINO-0.681 %br Conexao IP:PORTA %txt"><block s="reportJoinWords"><list><block var="hIP"/><l>.</l><block var="tIP"/><l>:2023</l></list></block></custom-block></block></script></block-definition><block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $ESPaceLINO-0.681 $nl Conexao IP:PORTA %&apos;ipporta&apos;" type="reporter" category="other"><variables><list struct="atomic" id="42">conexao_</list></variables><header></header><code></code><translations></translations><inputs><input type="%txt">192.168.100.33:2023</input></inputs><script><block s="doSetVar"><l>conexao_</l><custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 %br abrir conexão com ws:// %s"><block var="ipporta"/></custom-block></block><block s="doDeclareVariables"><list><l>aux</l></list></block><block s="doWarp"><script><custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 %br quando receber de %obj %upvar faça %cs"><block var="conexao_"/><l>dados</l><script><block s="doIf"><block s="reportVariadicEquals"><list><block var="dados"/><l>toggle</l></list></block><script><block s="doBroadcast"><l>toggle</l><list><l><option>all</option></l></list></block></script><list><l><bool>true</bool></l><script><block s="doSetVar"><l>aux</l><block s="reportListItem"><l>2</l><block s="reportTextSplit"><block var="dados"/><l>|</l></block></block></block><custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $ESPaceLINO-0.681 %br Trata mensagens %s"><block var="aux"/></custom-block></script></list></block></script></custom-block></script></block><block s="doReport"><block var="conexao_"/></block></script></block-definition><block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $ESPaceLINO-0.681 $nl %&apos;conexao&apos; desconectar" type="command" category="other" space="true"><header></header><code></code><translations></translations><inputs><input type="%txt">LINO<options>§_getVarNamesDict</options></input></inputs><script><custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $Conexoes-0.681 %br fechar conexao %obj"><custom-block s="var %s"><block var="conexao"/></custom-block></custom-block></script></block-definition><block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $ESPaceLINO-0.681 $nl %&apos;conexao&apos; Echo %&apos;mensagem&apos;" type="command" category="other"><header></header><code></code><translations></translations><inputs><input type="%txt" initial="1">LINO<options>§_getVarNamesDict</options></input><input type="%txt" initial="1">Olá!! Tudo bem!! Como vai!!</input></inputs><script><custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $Conexoes-0.681 %br enviar %s para conexão %obj"><block s="reportJoinWords"><list><l>echo</l><block var="mensagem"/></list></block><custom-block s="var %s"><block var="conexao"/></custom-block></custom-block></script></block-definition><block-definition s="multiline %&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations>pt:o texto multilinha _&#xD;ca:multilínia _&#xD;</translations><inputs><input type="%mlt"></input></inputs><script><block s="doReport"><block var="text"/></block></script></block-definition><block-definition s="substring of %&apos;string&apos; before %&apos;marker&apos;" type="reporter" category="operators"><comment x="0" y="0" w="175.33333333333334" collapsed="false">Reports the part of the first string up to the first instance of the second string inside it.  If the second string isn&apos;t found, reports the entire first string.</comment><header></header><code></code><translations>pt:o texto de _ antes de _&#xD;ca:part del text _ anterior a _&#xD;</translations><inputs><input type="%txt"></input><input type="%txt"></input></inputs><script><block s="doDeclareVariables"><list><l>index</l></list></block><block s="doSetVar"><l>index</l><custom-block s="position of %s in %txt"><block var="marker"/><block var="string"/></custom-block></block><block s="doReport"><block s="reportIfElse"><block s="reportVariadicEquals"><list><block var="index"/><l>0</l></list></block><block var="string"/><block s="reportIfElse"><block s="reportVariadicEquals"><list><block var="index"/><l>1</l></list></block><l></l><custom-block s="substring of %txt from position %n to position %n inclusive"><block var="string"/><l>1</l><block s="reportDifference"><block var="index"/><l>1</l></block></custom-block></block></block></block></script></block-definition><block-definition s="substring of %&apos;string&apos; after %&apos;marker&apos;" type="reporter" category="operators"><comment x="0" y="0" w="203.33333333333337" collapsed="false">Reports the portion of the first input string starting after the first occurrence of the second string.  If the second string isn&apos;t found in the first string, reports an empty string.</comment><header></header><code></code><translations>pt:o texto de _ depois de _&#xD;ca:part del text _ posterior a _&#xD;</translations><inputs><input type="%txt"></input><input type="%txt"></input></inputs><script><block s="doDeclareVariables"><list><l>index</l><l>end</l></list></block><block s="doSetVar"><l>index</l><custom-block s="position of %s in %txt"><block var="marker"/><block var="string"/></custom-block></block><block s="doSetVar"><l>end</l><block s="reportVariadicSum"><list><block var="index"/><block s="reportTextAttribute"><l><option>length</option></l><block var="marker"/></block></list></block></block><block s="doReport"><block s="reportIfElse"><block s="reportVariadicEquals"><list><block var="index"/><l>0</l></list></block><l></l><block s="reportIfElse"><block s="reportVariadicGreaterThan"><list><block var="end"/><block s="reportTextAttribute"><l><option>length</option></l><block var="string"/></block></list></block><l></l><custom-block s="substring of %txt from position %n to position %n inclusive"><block var="string"/><block var="end"/><l></l></custom-block></block></block></block></script></block-definition><block-definition s="position of %&apos;small&apos; in %&apos;large&apos;" type="reporter" category="operators"><comment x="0" y="0" w="294" collapsed="false">Reports the character position (starting from 1) of the beginning of the first input string inside the second input string.&#xD;If it&apos;s not found, reports 0.</comment><header></header><code></code><translations>pt:a posição de _ em _&#xD;ca:posició de _ en _&#xD;</translations><inputs><input type="%s"></input><input type="%txt"></input></inputs><script><block s="doReport"><block s="reportIfElse"><block s="reportGlobalFlag"><l><option>case sensitivity</option></l></block><block s="reportApplyExtension"><l>txt_indexof(sub, txt)</l><list><block var="small"/><block var="large"/></list></block><block s="reportApplyExtension"><l>txt_indexof(sub, txt)</l><list><block s="reportTextAttribute"><l><option>lower case</option></l><block var="small"/></block><block s="reportTextAttribute"><l><option>lower case</option></l><block var="large"/></block></list></block></block></block></script></block-definition><block-definition s="substring of %&apos;str&apos; from position %&apos;start&apos; to position %&apos;end&apos; inclusive" type="reporter" category="operators"><comment x="0" y="0" w="297.3333333333333" collapsed="false">Reports the portion of the first input (string) starting at the position given by the second input (counting from 1, like LETTER n OF) and ending at the position given by the third input (also counting from 1).  If the third input is empty, reports the portion from the first position to the end of the string.&#xD;If a position number is negative, counts from the end backward, so -1 is the last character, -2 is the next to last, etc.</comment><header></header><code></code><translations>pt:o texto de _ entre as posições _ e _ , inclusive&#xD;ca:part del text _ des de la posició _ fins _&#xD;</translations><inputs><input type="%txt"></input><input type="%n"></input><input type="%n"></input></inputs><script><block s="doReport"><block s="reportJoinWords"><block s="reportLetter"><block s="reportNumbers"><block s="reportIfElse"><block s="reportVariadicLessThan"><list><block var="start"/><l>0</l></list></block><block s="reportVariadicSum"><list><block s="reportVariadicSum"><list><block var="start"/><l>1</l></list></block><block s="reportTextAttribute"><l><option>length</option></l><block var="str"/></block></list></block><block var="start"/></block><block s="reportIfElse"><block s="reportVariadicEquals"><list><block var="end"/><l>0</l></list></block><block s="reportTextAttribute"><l><option>length</option></l><block var="str"/></block><block s="reportIfElse"><block s="reportVariadicLessThan"><list><block var="end"/><l>0</l></list></block><block s="reportVariadicSum"><list><block s="reportVariadicSum"><list><block var="end"/><l>1</l></list></block><block s="reportTextAttribute"><l><option>length</option></l><block var="str"/></block></list></block><block var="end"/></block></block></block><block var="str"/></block></block></block></script></block-definition><block-definition s="text %&apos;string&apos; contains %&apos;marker&apos;" type="predicate" category="operators"><comment x="0" y="0" w="218" collapsed="false">Reports True if the first input string contains the second input string, otherwise false.&#xD;&#xD;Comparison is case-independent by default; use USE CASE-INDEPENDENT COMPARISONS to change that.</comment><header></header><code></code><translations>pt:o texto de _ antes de _&#xD;ca:text _ conté _ ?&#xD;</translations><inputs><input type="%txt"></input><input type="%txt"></input></inputs><script><block s="doReport"><block s="reportVariadicGreaterThan"><list><custom-block s="position of %s in %txt"><block var="marker"/><block var="string"/></custom-block><l>0</l></list></block></block></script></block-definition><block-definition s="$Patrulha-.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $ESPaceLINO-0.681 $nl %&apos;conexao&apos; Toggle" type="command" category="other"><header></header><code></code><translations></translations><inputs><input type="%txt" initial="1">LINO<options>§_getVarNamesDict</options></input></inputs><script><custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $Conexoes-0.681 %br enviar %s para conexão %obj"><l>toggle</l><custom-block s="var %s"><block var="conexao"/></custom-block></custom-block></script></block-definition><block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $BluetoothBLE-0.681 $nl abrir conexão com BLE %&apos;device_Name&apos;" type="reporter" category="EUREKA Conexoes"><header></header><code></code><translations></translations><inputs><input type="%s">LINO</input></inputs><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doSetVar"><l>a</l><block s="evaluate"><block s="reportJSFunction"><list><l>device_Name</l></list><l>&#xD;    // ===== UUIDs =====&#xD;    var serviceUUID = &apos;12345678-1234-5678-1234-56789abcdef0&apos;;&#xD;    var charUUID    = &apos;12345678-1234-5678-1234-56789abcdef1&apos;;&#xD;&#xD;    // ===== Estado BLE =====&#xD;    var device = null;&#xD;    var characteristic = null;&#xD;    var connectionPromise = null;&#xD;    var connected = false;&#xD;&#xD;    // ===== Codecs =====&#xD;    const decoder = new TextDecoder(&apos;utf-8&apos;);&#xD;    const encoder = new TextEncoder();&#xD;&#xD;    // "this" é o Process do Snap!&#xD;    var proc = this;&#xD;&#xD;    // === Util: obter IDE_Morph de forma robusta (com cache) ===&#xD;    function getIDE() {&#xD;        if (getIDE._cache) return getIDE._cache;&#xD;&#xD;        // 1) via world (caso padrão no IDE)&#xD;        try {&#xD;            if (typeof world !== &apos;undefined&apos; &amp;&amp; world.children) {&#xD;                for (var i = 0; i &lt; world.children.length; i++) {&#xD;                    var c = world.children[i];&#xD;                    if (typeof IDE_Morph !== &apos;undefined&apos; &amp;&amp; c instanceof IDE_Morph) {&#xD;                        getIDE._cache = c;&#xD;                        return c;&#xD;                    }&#xD;                }&#xD;            }&#xD;        } catch (_) {}&#xD;&#xD;        // 2) via Stage do receiver&#xD;        try {&#xD;            var rc = proc &amp;&amp; proc.homeContext ? proc.homeContext.receiver : null;&#xD;            if (rc &amp;&amp; typeof rc.parentThatIsA === &apos;function&apos;) {&#xD;                var stage = rc.parentThatIsA(StageMorph);&#xD;                if (stage &amp;&amp; typeof stage.parentThatIsA === &apos;function&apos;) {&#xD;                    var ide = stage.parentThatIsA(IDE_Morph);&#xD;                    if (ide) { getIDE._cache = ide; return ide; }&#xD;                }&#xD;            }&#xD;        } catch (_) {}&#xD;&#xD;        return null;&#xD;    }&#xD;&#xD;    // === Util: broadcast "ble" com payload + variável global &apos;value&apos; ===&#xD;    // name: nome da mensagem (usaremos &apos;BluetoothBLE&apos;); data: payload (string ou o que você quiser)&#xD;    function broadcastBLE(name, _data) {&#xD;        var ide = getIDE();&#xD;        if (!ide) {&#xD;            console.warn(&apos;[BluetoothBLE] IDE não encontrado para broadcast.&apos;);&#xD;            return;&#xD;        }&#xD;&#xD;        // Atualiza variáveis globais convenientes&#xD;        try { ide.setVar(&apos;value&apos;, name); } catch (_) {}  // &lt;- variável global &apos;value&apos;&#xD;        try { ide.setVar(&apos;data&apos;,  _data); } catch (_) {}  // opcional: também &apos;data&apos;&#xD;&#xD;        // Dispara o evento (com payload) e evita reentrância usando setTimeout&#xD;      &#xD;                try {&#xD;                    ide.broadcast(String(name), String(_data), String(_data));   // chapéu "when I receive [BluetoothBLE]" + (message)=data&#xD;                } catch (e) {&#xD;                    // Fallback: se a sua versão ignorar payload, ao menos a variável &apos;value&apos; já está setada&#xD;                    try { ide.broadcast(String(name),String(_data), String(_data)); } catch (e2) {&#xD;                        console.error(&apos;[BluetoothBLE] Falha no broadcast:&apos;, e2);&#xD;                    }&#xD;                }&#xD;    }&#xD;&#xD;    // === Conexão BLE ===&#xD;    function getConnection(deviceName) {&#xD;        if (connectionPromise) return connectionPromise;&#xD;&#xD;        connectionPromise = navigator.bluetooth.requestDevice({&#xD;            filters: [ { namePrefix: deviceName },],&#xD;            //acceptAllDevices: true,&#xD;            optionalServices: [serviceUUID]&#xD;        })&#xD;        .then(d =&gt; {&#xD;            device = d;&#xD;            device.addEventListener(&apos;gattserverdisconnected&apos;, () =&gt; {&#xD;                connected = false;&#xD;                connectionPromise = null;&#xD;                characteristic = null;&#xD;                // opcional: sinalizar desconexão&#xD;                // broadcastBLE(&apos;ble&apos;, &apos;DISCONNECTED&apos;);&#xD;            });&#xD;            return d.gatt.connect();&#xD;        })&#xD;        .then(server =&gt; server.getPrimaryService(serviceUUID))&#xD;        .then(service =&gt; service.getCharacteristic(charUUID))&#xD;        .then(ch =&gt; {&#xD;            characteristic = ch;&#xD;            return ch.startNotifications().then(() =&gt; {&#xD;                ch.addEventListener(&apos;characteristicvaluechanged&apos;, ev =&gt; {&#xD;                    // payload decodificado&#xD;                    var value = decoder.decode(ev.target.value || new DataView(new ArrayBuffer(0)));&#xD;                    // Dispara o chapéu específico "when I receive [ble]"&#xD;                    broadcastBLE(&apos;BluetoothBLE&apos;, value);&#xD;                });&#xD;                connected = true;&#xD;                return ch;&#xD;            });&#xD;        })&#xD;        .catch(err =&gt; {&#xD;            connected = false;&#xD;            connectionPromise = null;&#xD;            throw err;&#xD;        });&#xD;&#xD;        return connectionPromise;&#xD;    }&#xD;&#xD;    // === API pública do objeto-função ===&#xD;    return function f(message = &apos;enviar&apos;) {&#xD;        if (message === &apos;enviar&apos;) {&#xD;            return function (data) {&#xD;                return getConnection(device_Name).then(ch =&gt; {&#xD;                    var payload = (typeof data === &apos;string&apos;) ? data : String(data);&#xD;                    return ch.writeValue(encoder.encode(payload));&#xD;                }).catch(err =&gt; {&#xD;                    console.error(&apos;Erro ao enviar via BLE:&apos;, err);&#xD;                });&#xD;            };&#xD;&#xD;        } else if (message === &apos;fechar&apos;) {&#xD;            return function () {&#xD;                if (device &amp;&amp; device.gatt &amp;&amp; device.gatt.connected) {&#xD;                    device.gatt.disconnect();&#xD;                }&#xD;                connected = false;&#xD;                connectionPromise = null;&#xD;                characteristic = null;&#xD;            };&#xD;&#xD;        } else if (message === &apos;estaconectado&apos;) {&#xD;            return connected ? true : false;&#xD;        }&#xD;    };&#xD;&#xD;</l></block><list><block var="device_Name"/></list></block></block><block s="doBroadcast"><l>BluetoothBLE</l><list></list></block><block s="doRun"><block s="evaluate"><block var="a"/><list><l>enviar</l></list></block><list><l>1</l></list></block><block s="doUntil"><block s="evaluate"><block var="a"/><list><l>estaconectado</l></list></block><script><block s="doWait"><l>1</l></block></script></block><block s="doReport"><block var="a"/></block></script></block-definition><block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 $nl abrir conexão com ws:// %&apos;url&apos;" type="reporter" category="EUREKA Conexoes" space="true"><header></header><code></code><translations></translations><inputs><input type="%s">localhost:2023</input></inputs><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doSetVar"><l>a</l><block s="evaluate"><block s="reportJSFunction"><list><l>url</l></list><l>var ws = new WebSocket(&apos;ws://&apos; + url);&#xD;&#xD;return message =&gt; {&#xD;  if(message == &apos;enviar&apos;)&#xD;    return data =&gt; ws.send(data);&#xD;  if(message == &apos;fechar&apos;)&#xD;    return () =&gt; ws.close();&#xD;  if (message == &apos;estaconectado&apos;){  &#xD;    if (ws.readyState === WebSocket.OPEN) {&#xD;       return true;&#xD;    } else {&#xD;       return false;&#xD;    }&#xD;  }&#xD;  if(message == &apos;onmessage&apos;) {&#xD;    return proc =&gt; {&#xD;      ws.onmessage = (e) =&gt; {&#xD;        var stage = this.parentThatIsA(StageMorph) || this;&#xD;        var process = new Process();&#xD;        process.initializeFor(proc, new List([e.data]));&#xD;        stage.threads.processes.push(process);&#xD;      }&#xD;    }&#xD;  }&#xD;};</l></block><list><block var="url"/></list></block></block><block s="doWaitUntil"><block s="evaluate"><block var="a"/><list><l>estaconectado</l></list></block></block><block s="doReport"><block var="a"/></block></script></block-definition><block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 $nl quando receber de %&apos;ws&apos; execute %&apos;procedure&apos;" type="command" category="EUREKA Conexoes"><header></header><code></code><translations></translations><inputs><input type="%obj"></input><input type="%cmdRing"></input></inputs><script><block s="doIf"><custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $Conexoes-0.681 %br conectado? %obj"><block var="ws"/></custom-block><script><block s="doRun"><block s="evaluate"><block var="ws"/><list><l>onmessage</l></list></block><list><block var="procedure"/></list></block></script><list><l><bool>true</bool></l><script><block s="doRun"><block s="reportJSFunction"><list></list><l>alert("ERROR - DESCONECTADO");</l></block><list></list></block></script></list></block></script></block-definition><block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 $nl quando receber de %&apos;ws&apos; %&apos;dados&apos; faça %&apos;procedure&apos;" type="command" category="EUREKA Conexoes"><header></header><code></code><translations></translations><inputs><input type="%obj"></input><input type="%upvar"></input><input type="%cs"></input></inputs><script><custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 %br quando receber de %obj execute %cmdRing"><block var="ws"/><block s="reifyScript"><script><block s="doSetVar"><l>dados</l><l></l></block><block s="doRun"><block var="procedure"/><list><l></l></list></block></script><list></list></block></custom-block></script></block-definition><block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $Conexoes-0.681 $nl enviar %&apos;data&apos; para conexão %&apos;ws&apos;" type="command" category="EUREKA Conexoes" space="true"><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%obj"></input></inputs><script><block s="doIf"><custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $Conexoes-0.681 %br conectado? %obj"><block var="ws"/></custom-block><script><block s="doRun"><block s="evaluate"><block var="ws"/><list><l>enviar</l></list></block><list><block var="data"/></list></block></script><list><l><bool>true</bool></l><script><block s="doRun"><block s="reportJSFunction"><list></list><l>alert("ERROR - DESCONECTADO");</l></block><list></list></block></script></list></block></script></block-definition><block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $Conexoes-0.681 $nl fechar conexao %&apos;ws&apos;" type="command" category="EUREKA Conexoes"><header></header><code></code><translations></translations><inputs><input type="%obj"></input></inputs><script><block s="doIf"><custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $Conexoes-0.681 %br conectado? %obj"><block var="ws"/></custom-block><script><block s="doRun"><block s="evaluate"><block var="ws"/><list><l>fechar</l></list></block><list></list></block></script><list><l><bool>true</bool></l><script><block s="doRun"><block s="reportJSFunction"><list></list><l>alert("ERROR - DESCONECTADO");</l></block><list></list></block></script></list></block></script></block-definition><block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $Conexoes-0.681 $nl conectado? %&apos;con&apos;" type="predicate" category="EUREKA Conexoes"><header></header><code></code><translations></translations><inputs><input type="%obj"></input></inputs><script><block s="doIf"><block s="reportNot"><block s="reportIsA"><block var="con"/><l><option>number</option></l></block></block><script><block s="doIf"><block s="evaluate"><block var="con"/><list><l>estaconectado</l></list></block><script><block s="doReport"><block s="reportBoolean"><l><bool>true</bool></l></block></block></script><list><block s="evaluate"><block s="reportJSFunction"><list></list><l>return confirm("Falha na conexão, Parar tudo?")</l></block><list></list></block><script><block s="doStopThis"><l><option>all</option></l></block></script><l><bool>true</bool></l><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></list></block></script><list></list></block><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></block-definition><block-definition s="create %&apos;_scope&apos; var %&apos;_names&apos;" type="command" category="variables"><comment x="0" y="0" w="146" collapsed="false">This block creates  new variables on the selected scope: global (for all sprites), sprite (for this sprite only) or script (only for that blocks stack) with the names given (in &apos;names&apos; list).&#xD;&#xD;If there is already a variable with that name in that scope, it does nothing: no errors and no overwrites.</comment><header></header><code></code><translations>pt:cria as variáveis _ _&#xD;ca:crea les _ variables _&#xD;es:crear las _ variables _&#xD;de:erstellen _ var _&#xD;pl:utwórz zmienną _ _&#xD;</translations><inputs><input type="%s" readonly="true">global<options>global&#xD;sprite&#xD;script</options></input><input type="%mult%txt"></input></inputs><script><block s="doWarp"><script><block s="doForEach"><l>_item</l><block var="_names"/><script><block s="doApplyExtension"><l>var_declare(scope, name)</l><list><block var="_scope"/><block var="_item"/></list></block></script></block></script></block></script></block-definition><block-definition s="delete var %&apos;_names&apos;" type="command" category="variables"><comment x="0" y="0" w="217" collapsed="false">This block deletes all the variables with the names given (inside input list).&#xD;&#xD;Each name will make only one variable deletion, and this will be the variable found following the scope order: &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos;.&#xD;&#xD;If we have a &quot;testing&quot; sprite variable and also a &quot;testing&quot; global one, deleting &quot;testing&quot; will delete only the sprite one (Yes! we can also do &quot;delete var (testing, testing)&quot; to delete both.&#xD;&#xD;If one variable does not exists (in any scope) an error happens, stopping block action in that point. You can check it before with the &quot;does var (name) exists?&quot;block. </comment><header></header><code></code><translations>pt:remove as variáveis _&#xD;ca:esborra les variables _&#xD;es:borrar variables _&#xD;de:löschen var _&#xD;pl:usuń zmienną _&#xD;</translations><inputs><input type="%mult%txt"></input></inputs><script><block s="doWarp"><script><block s="doForEach"><l>_item</l><block var="_names"/><script><block s="doApplyExtension"><l>err_ignore</l><list><custom-block s="var %s"><block var="_item"/></custom-block></list></block><block s="doApplyExtension"><l>var_delete(name)</l><list><block var="_item"/></list></block></script></block></script></block></script></block-definition><block-definition s="set var %&apos;_name&apos; to %&apos;_value&apos;" type="command" category="variables"><comment x="0" y="0" w="240.4931640625" collapsed="false">This block sets the given value (last input) to the variable named with the name givent (var input).&#xD;&#xD;It looks for that variable following the scope order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos; (the first match it finds).&#xD;&#xD;If that variable does not exist (in any scope) an error happens, stopping their script. You can check it before using the &quot;does var (name) exists?&quot; block. </comment><header></header><code></code><translations>ca:assigna a _ el valor _&#xD;es:asignar a _ el valor _&#xD;pt:altera _ para _&#xD;de:setze var _ auf _&#xD;pl:ustaw zmienną _ na _&#xD;</translations><inputs><input type="%s"><options>§_getVarNamesDict</options></input><input type="%s"></input></inputs><script><block s="doApplyExtension"><l>var_set(name, val)</l><list><block var="_name"/><block var="_value"/></list></block></script></block-definition><block-definition s="var %&apos;_name&apos;" type="reporter" category="variables"><comment x="0" y="0" w="178.00000000000003" collapsed="false">This block reports the value of the variable with the name given.&#xD;&#xD;It looks for that variable following the scope order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos; (the first match it finds).&#xD;&#xD;If that variable does not exist (in any scope) an error happens, stopping their script. You can check it before using the &quot;does var (name) exists?&quot; block. </comment><header></header><code></code><translations>pt:o valor de _&#xD;pl:zmienna _&#xD;</translations><inputs><input type="%s"><options>§_getVarNamesDict</options></input></inputs><script><block s="doReport"><block s="reportApplyExtension"><l>var_get(name)</l><list><block var="_name"/></list></block></block></script></block-definition><block-definition s="does var %&apos;_name&apos; exist?" type="predicate" category="variables"><comment x="0" y="0" w="146" collapsed="false">This block reports &quot;true&quot; if there is a variable with this given name (input slot) in that context.&#xD;&#xD;It can be a global, sprite or script variable.&#xD;&#xD;Otherwise it reports &quot;false&quot;.</comment><header></header><code></code><translations>pt:a variável _ existe&#xD;ca:existeix la variable _ ?&#xD;es:existe la variable _ ?&#xD;de:existiert var _ ?&#xD;pl:zmienna _ istnieje?&#xD;</translations><inputs><input type="%s"></input></inputs><script><block s="doApplyExtension"><l>err_try(cmd, catch, err)</l><list><block s="reifyScript"><script><block s="doApplyExtension"><l>err_ignore</l><list><block s="reportApplyExtension"><l>var_get(name)</l><list><block var="_name"/></list></block></list></block><block s="doReport"><block s="reportBoolean"><l><bool>true</bool></l></block></block></script><list></list></block><block s="reifyScript"><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><list></list></block><l></l></list></block><block s="doApplyExtension"><l>err_reset</l><list></list></block></script></block-definition><block-definition s="show var %&apos;_name&apos;" type="command" category="variables"><comment x="0" y="0" w="181" collapsed="false">This block turns on (show) the watcher view on stage (if it was not already activated) of the variable with the given name (slot input).&#xD;&#xD;It can only access to the closest variable scope (if there different variables with the same name in different scopes) following the order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos;.&#xD;&#xD;No errors if that variable does not exist.</comment><header></header><code></code><translations>ca:mostra la variable _&#xD;es:mostrar variable _&#xD;pt:mostra a variável _&#xD;de:zeige var _&#xD;pl:pokaż zmienną _&#xD;</translations><inputs><input type="%s"><options>§_getVarNamesDict</options></input></inputs><script><block s="doApplyExtension"><l>var_show(name)</l><list><block var="_name"/></list></block></script></block-definition><block-definition s="hide var %&apos;_name&apos;" type="command" category="variables"><comment x="0" y="0" w="181" collapsed="false">This block turns off (hide) the watcher view on stage (if it was not already activated) of the variable with the given name (slot input).&#xD;&#xD;It can only access to the closest variable scope (if there different variables with the same name in different scopes) following the order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos;.&#xD;&#xD;No errors if that variable does not exist.</comment><header></header><code></code><translations>ca:amaga la variable _&#xD;es:esconder variable _&#xD;pt:esconde a variável _&#xD;de:verstecke var _&#xD;pl:ukryj zmienną _&#xD;</translations><inputs><input type="%s"><options>§_getVarNamesDict</options></input></inputs><script><block s="doApplyExtension"><l>var_hide(name)</l><list><block var="_name"/></list></block></script></block-definition><block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $ESPaceLINO-0.681 $nl Trata mensagens %&apos;dado&apos;" type="command" category="other"><header></header><code></code><translations></translations><inputs><input type="%s" initial="1"></input></inputs><script><block s="doDeclareVariables"><list><l>aux</l></list></block><block s="doIf"><block s="reportVariadicEquals"><list><block var="dado"/><l>toggle</l></list></block><script><block s="doBroadcast"><l>toggle</l><list><l><option>all</option></l></list></block></script><list><l><bool>true</bool></l><script><block s="doSetVar"><l>aux</l><block var="dado"/></block><block s="doIf"><block s="reportVariadicEquals"><list><l>SRV_1</l><custom-block s="substring of %txt from position %n to position %n inclusive"><block var="aux"/><l>1</l><l>5</l></custom-block></list></block><script><block s="doBroadcast"><l>SERVO_1</l><list><l><option>all</option></l><custom-block s="substring of %txt after %txt"><block var="aux"/><l>SRV_1</l></custom-block></list></block></script><list><block s="reportVariadicEquals"><list><l>SRV_2</l><custom-block s="substring of %txt from position %n to position %n inclusive"><block var="aux"/><l>1</l><l>5</l></custom-block></list></block><script><block s="doBroadcast"><l>SERVO_2</l><list><l><option>all</option></l><custom-block s="substring of %txt after %txt"><block var="aux"/><l>SRV_2</l></custom-block></list></block></script><block s="reportVariadicEquals"><list><l>SRV_3</l><custom-block s="substring of %txt from position %n to position %n inclusive"><block var="aux"/><l>1</l><l>5</l></custom-block></list></block><script><block s="doBroadcast"><l>SERVO_3</l><list><l><option>all</option></l><custom-block s="substring of %txt after %txt"><block var="aux"/><l>SRV_3</l></custom-block></list></block></script><block s="reportVariadicEquals"><list><l>SRV_4</l><custom-block s="substring of %txt from position %n to position %n inclusive"><block var="aux"/><l>1</l><l>5</l></custom-block></list></block><script><block s="doBroadcast"><l>SERVO_4</l><list><l><option>all</option></l><custom-block s="substring of %txt after %txt"><block var="aux"/><l>SRV_4</l></custom-block></list></block></script><block s="reportVariadicEquals"><list><l>UTS_</l><custom-block s="substring of %txt from position %n to position %n inclusive"><block var="aux"/><l>1</l><l>4</l></custom-block></list></block><script><block s="doBroadcast"><l>ULTRASONICO</l><list><l><option>all</option></l><custom-block s="substring of %txt after %txt"><block var="aux"/><l>UTS_</l></custom-block></list></block></script><block s="reportVariadicEquals"><list><l>PO1_</l><custom-block s="substring of %txt from position %n to position %n inclusive"><block var="aux"/><l>1</l><l>4</l></custom-block></list></block><script><block s="doBroadcast"><l>POTENCIOMETRO_1</l><list><l><option>all</option></l><custom-block s="substring of %txt after %txt"><block var="aux"/><l>PO1_</l></custom-block></list></block></script><block s="reportVariadicEquals"><list><l>PO2_</l><custom-block s="substring of %txt from position %n to position %n inclusive"><block var="aux"/><l>1</l><l>4</l></custom-block></list></block><script><block s="doBroadcast"><l>POTENCIOMETRO_2</l><list><l><option>all</option></l><custom-block s="substring of %txt after %txt"><block var="aux"/><l>PO2_</l></custom-block></list></block></script><block s="reportVariadicEquals"><list><l>BT0_</l><custom-block s="substring of %txt from position %n to position %n inclusive"><block var="aux"/><l>1</l><l>4</l></custom-block></list></block><script><block s="doBroadcast"><l>DESCONECTANDO</l><list><l><option>all</option></l><custom-block s="substring of %txt after %txt"><block var="aux"/><l>BT0_</l></custom-block></list></block></script><block s="reportVariadicEquals"><list><l>LED1</l><custom-block s="substring of %txt from position %n to position %n inclusive"><block var="aux"/><l>1</l><l>4</l></custom-block></list></block><script><block s="doBroadcast"><l>LED_1</l><list><l><option>all</option></l><block s="reportVariadicEquals"><list><custom-block s="substring of %txt after %txt"><block var="aux"/><l>LED1</l></custom-block><l>1</l></list></block></list></block></script><block s="reportVariadicEquals"><list><l>LED2</l><custom-block s="substring of %txt from position %n to position %n inclusive"><block var="aux"/><l>1</l><l>4</l></custom-block></list></block><script><block s="doBroadcast"><l>LED_2</l><list><l><option>all</option></l><block s="reportVariadicEquals"><list><custom-block s="substring of %txt after %txt"><block var="aux"/><l>LED2</l></custom-block><l>1</l></list></block></list></block></script><block s="reportVariadicEquals"><list><l>LED3</l><custom-block s="substring of %txt from position %n to position %n inclusive"><block var="aux"/><l>1</l><l>4</l></custom-block></list></block><script><block s="doBroadcast"><l>LED_3</l><list><l><option>all</option></l><block s="reportVariadicEquals"><list><custom-block s="substring of %txt after %txt"><block var="aux"/><l>LED3</l></custom-block><l>1</l></list></block></list></block></script><block s="reportVariadicEquals"><list><l>IRR</l><custom-block s="substring of %txt from position %n to position %n inclusive"><block var="aux"/><l>1</l><l>3</l></custom-block></list></block><script><block s="doBroadcast"><l>IRR</l><list><l><option>all</option></l><custom-block s="substring of %txt after %txt"><block var="aux"/><l>IRR</l></custom-block></list></block></script><block s="reportVariadicEquals"><list><l>BT1_</l><custom-block s="substring of %txt from position %n to position %n inclusive"><block var="aux"/><l>1</l><l>4</l></custom-block></list></block><script><block s="doBroadcast"><l>BOTAO_1</l><list><l><option>all</option></l><custom-block s="substring of %txt after %txt"><block var="aux"/><l>BT1_</l></custom-block></list></block></script><block s="reportVariadicEquals"><list><l>LDR1_</l><custom-block s="substring of %txt from position %n to position %n inclusive"><block var="aux"/><l>1</l><l>5</l></custom-block></list></block><script><block s="doBroadcast"><l>LDR_1</l><list><l><option>all</option></l><custom-block s="substring of %txt after %txt"><block var="aux"/><l>LDR1_</l></custom-block></list></block></script><block s="reportVariadicEquals"><list><l>BT2_</l><custom-block s="substring of %txt from position %n to position %n inclusive"><block var="aux"/><l>1</l><l>4</l></custom-block></list></block><script><block s="doBroadcast"><l>BOTAO_2</l><list><l><option>all</option></l><custom-block s="substring of %txt after %txt"><block var="aux"/><l>BT2_</l></custom-block></list></block></script><l><bool>true</bool></l><script><block s="doBroadcast"><l>ECHO</l><list><l><option>all</option></l><block var="dado"/></list></block></script></list></block></script></list></block></script></block-definition></blocks>