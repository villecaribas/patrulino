<blocks app="Snap! 9.0, https://snap.berkeley.edu" version="2"><palette><category name="EUREKA WebSocket II" color="16,179,0,1"/></palette><block-definition s="abrir conexão com ws:// %&apos;url&apos;" type="reporter" category="EUREKA WebSocket II"><header></header><code></code><translations></translations><inputs><input type="%s">localhost:2023</input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>url</l></list><l>var ws = new WebSocket(&apos;ws://&apos; + url);&#xD;&#xD;return message =&gt; {&#xD;  if(message == &apos;enviar&apos;)&#xD;    return data =&gt; ws.send(data);&#xD;  if(message == &apos;fechar&apos;)&#xD;    return () =&gt; ws.close();&#xD;  if (message == &apos;estaconectado&apos;){  &#xD;    if (ws.readyState === WebSocket.OPEN) {&#xD;       return true;&#xD;    } else {&#xD;       return false;&#xD;    }&#xD;  }&#xD;  if(message == &apos;onmessage&apos;) {&#xD;    return proc =&gt; {&#xD;      ws.onmessage = (e) =&gt; {&#xD;        var stage = this.parentThatIsA(StageMorph) || this;&#xD;        var process = new Process();&#xD;        process.initializeFor(proc, new List([e.data]));&#xD;        stage.threads.processes.push(process);&#xD;      }&#xD;    }&#xD;  }&#xD;};</l></block><list><block var="url"/></list></block></block></script></block-definition><block-definition s="enviar %&apos;data&apos; para conexão %&apos;ws&apos;" type="command" category="EUREKA WebSocket II"><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%obj"></input></inputs><script><block s="doRun"><block s="evaluate"><block var="ws"/><list><l>enviar</l></list></block><list><block var="data"/></list></block></script></block-definition><block-definition s="quando receber de %&apos;ws&apos; execute %&apos;procedure&apos;" type="command" category="EUREKA WebSocket II"><header></header><code></code><translations></translations><inputs><input type="%obj"></input><input type="%cmdRing"></input></inputs><script><block s="doRun"><block s="evaluate"><block var="ws"/><list><l>onmessage</l></list></block><list><block var="procedure"/></list></block></script></block-definition><block-definition s="quando receber de %&apos;ws&apos; %&apos;data&apos; faça %&apos;procedure&apos;" type="command" category="EUREKA WebSocket II"><header></header><code></code><translations></translations><inputs><input type="%obj"></input><input type="%upvar"></input><input type="%cs"></input></inputs><script><custom-block s="quando receber de %obj execute %cmdRing"><block var="ws"/><block s="reifyScript"><script><block s="doSetVar"><l>data</l><l></l></block><block s="doRun"><block var="procedure"/><list><l></l></list></block></script><list></list></block></custom-block></script></block-definition><block-definition s="fechar conexao %&apos;ws&apos;" type="command" category="EUREKA WebSocket II"><header></header><code></code><translations></translations><inputs><input type="%obj"></input></inputs><script><block s="doRun"><block s="evaluate"><block var="ws"/><list><l>fechar</l></list></block><list></list></block></script></block-definition><block-definition s="conectado? %&apos;con&apos;" type="predicate" category="EUREKA WebSocket II"><header></header><code></code><translations></translations><inputs><input type="%obj"></input></inputs><script><block s="doReport"><block s="evaluate"><block var="con"/><list><l>estaconectado</l></list></block></block></script></block-definition></blocks>