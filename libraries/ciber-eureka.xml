<blocks app="Snap! 7, https://snap.berkeley.edu" version="2">
    <palette>
        <category name="WebSockets" color="78,190,69,1"/>
        <category name="PatruLINO" color="204,31,0,1"/>
    </palette>
    <block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 $nl Conectar no ip: %&apos;IP&apos;" type="command" category="WebSockets">
        <comment x="0" y="0" w="256" collapsed="false">Desconectar todas as conexões</comment>
        <header></header>
        <code></code>
        <translations></translations>
        <inputs>
            <input type="%s">192.168.1.1</input>
        </inputs>
        <script>
            <block s="doAddToList">
                <custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 %br criar conexao e esperar %s">
                    <block var="IP"/>
                </custom-block>
                <custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 %br Conexoes WebSockets"></custom-block>
            </block>
        </script>
    </block-definition>
    <block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 $nl Conexoes WebSockets" type="reporter" category="WebSockets">
        <comment x="0" y="0" w="256" collapsed="true">Retorna o dado em formato STRING oriundo da conexão indicada no parâmetro da função.</comment>
        <header></header>
        <code></code>
        <translations></translations>
        <inputs></inputs>
        <script>
            <block s="doIfElse">
                <custom-block s="does var %s exist?">
                    <l>WebSockets</l>
                </custom-block>
                <script>
                    <block s="doReport">
                        <custom-block s="var %s">
                            <l>WebSockets</l>
                        </custom-block>
                    </block>
                </script>
                <script>
                    <custom-block s="create %s var %mult%txt">
                        <l>global</l>
                        <list>
                            <l>WebSockets</l>
                        </list>
                    </custom-block>
                    <custom-block s="set var %s to %s">
                        <l>WebSockets</l>
                        <block s="reportNewList">
                            <list></list>
                        </block>
                    </custom-block>
                    <block s="doReport">
                        <custom-block s="var %s">
                            <l>WebSockets</l>
                        </custom-block>
                    </block>
                </script>
            </block>
        </script>
    </block-definition>
    <block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 $nl desconectar tudo" type="command" category="WebSockets">
        <comment x="0" y="0" w="256" collapsed="false">Desconectar todas as conexões</comment>
        <header></header>
        <code></code>
        <translations></translations>
        <inputs></inputs>
        <script>
            <block s="doIf">
                <block s="reportAnd">
                    <custom-block s="does var %s exist?">
                        <l>WebSockets</l>
                    </custom-block>
                    <block s="reportIsA">
                        <custom-block s="var %s">
                            <l>WebSockets</l>
                        </custom-block>
                        <l>
                            <option>list</option>
                        </l>
                    </block>
                </block>
                <script>
                    <block s="doForEach">
                        <l>item</l>
                        <custom-block s="var %s">
                            <l>WebSockets</l>
                        </custom-block>
                        <script>
                            <custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 %br desconectar %s">
                                <block var="item"/>
                            </custom-block>
                        </script>
                    </block>
                </script>
            </block>
            <block s="doDeleteFromList">
                <l>
                    <option>all</option>
                </l>
                <custom-block s="var %s">
                    <l>WebSockets</l>
                </custom-block>
            </block>
        </script>
    </block-definition>
    <block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 $nl criar conexao %&apos;ip&apos;" type="reporter" category="WebSockets">
        <comment x="0" y="0" w="256" collapsed="true">Tenta abrir uma conexão com o IP informado no parâmetro e retorna um objeto referência da mesma. Este objeto pode ser atribuido a uma variável que será a referência para a conexão criada.  Obs.: O bloco [Está conectado?] vai informar quando a conexão estiver pronta. </comment>
        <variables>
            <list struct="atomic" id="70">a</list>
        </variables>
        <header></header>
        <code></code>
        <translations></translations>
        <inputs>
            <input type="%s">192.168.1.1</input>
        </inputs>
        <script>
            <block s="doSetVar">
                <l>a</l>
                <block s="evaluate">
                    <block s="reportJSFunction">
                        <list>
                            <l>ip</l>
                        </list>
                        <l>var WSC = (function () {&#xD;    var instance;&#xD;&#xD;    function init() {&#xD;        //Singleton&#xD;        //Metodos e variaveis privadas&#xD; &#xD;        var url = "ws://" + ip + "/ws";&#xD;        var statusCon = false;&#xD;        var ws = statusCon?ws:new WebSocket(url);&#xD;        var res = "";&#xD;&#xD;        ws.onopen = function (evt) {&#xD;            console.log("Conexao aberta ...");&#xD;            statusCon = true;&#xD;        };&#xD;&#xD;        ws.onmessage = function (evt) {&#xD;            console.log("Dado recebido ... :" + evt.data);&#xD;            res = evt.data;&#xD;        };&#xD;&#xD;        ws.onclose = function (evt) {&#xD;            console.log("Connection closed.");&#xD;            statusCon = false;&#xD;        };&#xD;&#xD;        return {&#xD;            //Metodos e variaveis PUBLICAS&#xD;            enviar: function (msg) {&#xD;                console.log("--&gt; " + msg);&#xD;                if (statusCon) {&#xD;                    ws.send(msg);&#xD;                }&#xD;            },&#xD;&#xD;            opened: function () {&#xD;                return statusCon;&#xD;            },&#xD;&#xD;            leia: function () {&#xD;                return res;&#xD;            },&#xD;&#xD;            fechar: function(){&#xD;                statusCon = false;&#xD;                ws.close();&#xD;            }&#xD;&#xD;        };&#xD;&#xD;    };&#xD;&#xD;    return {&#xD;        getInstance: function () {&#xD;            if (!instance) {&#xD;                instance = init();&#xD;            }&#xD;&#xD;            return instance;&#xD;        }&#xD;    };&#xD;&#xD;})();&#xD;&#xD;var conectWSC = WSC.getInstance();&#xD;&#xD;return conectWSC;&#xD;</l>
                    </block>
                    <list>
                        <block var="ip"/>
                    </list>
                </block>
            </block>
            <block s="doReport">
                <block var="a"/>
            </block>
        </script>
    </block-definition>
    <block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 $nl criar conexao e esperar %&apos;ip&apos;" type="reporter" category="WebSockets">
        <comment x="0" y="0" w="256" collapsed="true">Tenta abrir uma conexão com o IP informado no parâmetro e retorna um objeto referência da mesma. Este objeto pode ser atribuido a uma variável que será a referência para a conexão criada.  Obs.: O bloco [Está conectado?] vai informar quando a conexão estiver pronta. </comment>
        <header></header>
        <code></code>
        <translations></translations>
        <inputs>
            <input type="%s">192.168.1.1</input>
        </inputs>
        <script>
            <block s="doDeclareVariables">
                <list>
                    <l>conexao</l>
                </list>
            </block>
            <block s="doSetVar">
                <l>conexao</l>
                <custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 %br criar conexao %s">
                    <block var="ip"/>
                </custom-block>
            </block>
            <block s="doWaitUntil">
                <custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 %br %s está conectado?">
                    <block var="conexao"/>
                </custom-block>
            </block>
            <block s="doReport">
                <block var="conexao"/>
            </block>
        </script>
    </block-definition>
    <block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 $nl desconectar %&apos;WSC&apos;" type="command" category="WebSockets">
        <comment x="0" y="0" w="256" collapsed="true">Desconecta conexao indicada no parâmetro.</comment>
        <header></header>
        <code></code>
        <translations></translations>
        <inputs>
            <input type="%s">PatruLINO</input>
        </inputs>
        <script>
            <block s="doRun">
                <block s="reportJSFunction">
                    <list>
                        <l>WSC</l>
                    </list>
                    <l>WSC.fechar();</l>
                </block>
                <list>
                    <block var="WSC"/>
                </list>
            </block>
            <block s="doDeleteFromList">
                <block s="reportListIndex">
                    <block var="WSC"/>
                    <custom-block s="var %s">
                        <l>WebSockets</l>
                    </custom-block>
                </block>
                <custom-block s="var %s">
                    <l>WebSockets</l>
                </custom-block>
            </block>
        </script>
    </block-definition>
    <block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 $nl %&apos;WS&apos; está conectado?" type="predicate" category="WebSockets">
        <comment x="0" y="0" w="256" collapsed="true">Retorna TRUE caso a conexão estiver estabelecida e FALSE caso contrário.</comment>
        <header></header>
        <code></code>
        <translations></translations>
        <inputs>
            <input type="%s">PatruLINO</input>
        </inputs>
        <script>
            <block s="doReport">
                <block s="evaluate">
                    <block s="reportJSFunction">
                        <list>
                            <l>ws</l>
                        </list>
                        <l>return ws.opened()||false</l>
                    </block>
                    <list>
                        <block var="WS"/>
                    </list>
                </block>
            </block>
        </script>
    </block-definition>
    <block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 $nl enviar para %&apos;WSC&apos; mensagem: %&apos;mesg&apos;" type="command" category="WebSockets">
        <comment x="0" y="0" w="256" collapsed="true">Envia um texto indicado pelo campo mensagem à conexão indicada no parâmetro.</comment>
        <header></header>
        <code></code>
        <translations></translations>
        <inputs>
            <input type="%s">PatruLINO</input>
            <input type="%s"></input>
        </inputs>
        <script>
            <block s="doRun">
                <block s="reportJSFunction">
                    <list>
                        <l>WSC</l>
                        <l>mesg</l>
                    </list>
                    <l>if (WSC.opened()||false){&#xD;   WSC.enviar(mesg)&#xD;}else{&#xD;   alert("ERRO: Você tem que criar a conexão primeiro!");&#xD;}</l>
                </block>
                <list>
                    <block var="WSC"/>
                    <block var="mesg"/>
                </list>
            </block>
        </script>
    </block-definition>
    <block-definition s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 $nl receber dado de %&apos;WS&apos;" type="reporter" category="WebSockets">
        <comment x="0" y="0" w="256" collapsed="true">Retorna o dado em formato STRING oriundo da conexão indicada no parâmetro da função.</comment>
        <header></header>
        <code></code>
        <translations></translations>
        <inputs>
            <input type="%s">PatruLINO</input>
        </inputs>
        <script>
            <block s="doReport">
                <block s="evaluate">
                    <block s="reportJSFunction">
                        <list>
                            <l>WS</l>
                        </list>
                        <l>return WS.leia()</l>
                    </block>
                    <list>
                        <block var="WS"/>
                    </list>
                </block>
            </block>
        </script>
    </block-definition>
    <block-definition s="Conectar ao %&apos;PatruLINO&apos; %&apos;ip&apos;" type="command" category="PatruLINO">
        <header></header>
        <code></code>
        <translations></translations>
        <inputs>
            <input type="%upvar"></input>
            <input type="%s">192.168.1.1</input>
        </inputs>
        <script>
            <custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 %br Conectar no ip: %s">
                <block var="ip"/>
            </custom-block>
            <block s="doSetVar">
                <l>PatruLINO</l>
                <block s="reportListItem">
                    <l>
                        <option>last</option>
                    </l>
                    <custom-block s="var %s">
                        <l>WebSockets</l>
                    </custom-block>
                </block>
            </block>
        </script>
    </block-definition>
    <block-definition s="PatruLINO %&apos;ip&apos;" type="reporter" category="PatruLINO">
        <header></header>
        <code></code>
        <translations></translations>
        <inputs>
            <input type="%s">192.168.1.1</input>
        </inputs>
        <script>
            <block s="doReport">
                <custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 %br criar conexao e esperar %s">
                    <block var="ip"/>
                </custom-block>
            </block>
        </script>
    </block-definition>
    <block-definition s="Desconectado" type="command" category="PatruLINO">
        <header></header>
        <code></code>
        <translations></translations>
        <inputs></inputs>
        <script>
            <block s="bubble">
                <l>PatruLINO DESCONECTADO!</l>
            </block>
        </script>
    </block-definition>
    <block-definition s="%&apos;PatruLINO&apos; força: %&apos;forca&apos; % ângulo: %&apos;angulo&apos; º" type="command" category="PatruLINO">
        <variables>
            <list struct="atomic" id="191">a_EUREKA</list>
        </variables>
        <header></header>
        <code></code>
        <translations></translations>
        <inputs>
            <input type="%s">PatruLINO</input>
            <input type="%n">100</input>
            <input type="%n"></input>
        </inputs>
        <script>
            <block s="doSetVar">
                <l>a_EUREKA</l>
                <block s="reportModulus">
                    <block var="angulo"/>
                    <l>360</l>
                </block>
            </block>
            <block s="doIfElse">
                <custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 %br %s está conectado?">
                    <block var="PatruLINO"/>
                </custom-block>
                <script>
                    <block s="doIfElse">
                        <block s="reportOr">
                            <block s="reportLessThan">
                                <block var="a_EUREKA"/>
                                <l>90</l>
                            </block>
                            <block s="reportGreaterThan">
                                <block var="a_EUREKA"/>
                                <l>270</l>
                            </block>
                        </block>
                        <script>
                            <block s="doSetVar">
                                <l>a_EUREKA</l>
                                <block s="reportDifference">
                                    <l>180</l>
                                    <block s="reportModulus">
                                        <block s="reportVariadicSum">
                                            <list>
                                                <block var="a_EUREKA"/>
                                                <l>90</l>
                                            </list>
                                        </block>
                                        <l>360</l>
                                    </block>
                                </block>
                            </block>
                        </script>
                        <script>
                            <block s="doSetVar">
                                <l>a_EUREKA</l>
                                <block s="reportDifference">
                                    <l>180</l>
                                    <block s="reportModulus">
                                        <block s="reportDifference">
                                            <block var="a_EUREKA"/>
                                            <l>270</l>
                                        </block>
                                        <l>-360</l>
                                    </block>
                                </block>
                            </block>
                        </script>
                    </block>
                    <custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 %br enviar para %s mensagem: %s">
                        <block var="PatruLINO"/>
                        <block s="reportJoinWords">
                            <list>
                                <l>mf</l>
                                <block var="forca"/>
                                <l>:</l>
                                <block s="reportRound">
                                    <block var="a_EUREKA"/>
                                </block>
                            </list>
                        </block>
                    </custom-block>
                </script>
                <script>
                    <custom-block s="Desconectado"></custom-block>
                </script>
            </block>
        </script>
    </block-definition>
    <block-definition s="%&apos;Patrulino&apos; LED %&apos;n&apos; %&apos;estado&apos;" type="command" category="PatruLINO">
        <header></header>
        <code></code>
        <translations></translations>
        <inputs>
            <input type="%s">PatruLINO</input>
            <input type="%s">1<options>1&#xD;2&#xD;3</options></input>
            <input type="%b">true</input>
        </inputs>
        <script>
            <block s="doIfElse">
                <custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 %br %s está conectado?">
                    <block var="Patrulino"/>
                </custom-block>
                <script>
                    <custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 %br enviar para %s mensagem: %s">
                        <block var="Patrulino"/>
                        <block s="reportJoinWords">
                            <list>
                                <l>l</l>
                                <block var="n"/>
                                <block s="reportIfElse">
                                    <block var="estado"/>
                                    <l>1</l>
                                    <l>0</l>
                                </block>
                            </list>
                        </block>
                    </custom-block>
                </script>
                <script>
                    <block s="bubble">
                        <l>PatruLINO DESCONECTADO!</l>
                    </block>
                </script>
            </block>
        </script>
    </block-definition>
    <block-definition s="%&apos;PatruLINO&apos; LED %&apos;n&apos; pisca %&apos;s&apos; ms" type="command" category="PatruLINO">
        <header></header>
        <code></code>
        <translations></translations>
        <inputs>
            <input type="%s">PatruLINO</input>
            <input type="%s">1<options>1&#xD;2&#xD;3</options></input>
            <input type="%n">1000</input>
        </inputs>
        <script>
            <block s="doIfElse">
                <custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 %br %s está conectado?">
                    <block var="PatruLINO"/>
                </custom-block>
                <script>
                    <block s="doSetVar">
                        <l>s</l>
                        <block s="reportIfElse">
                            <block s="reportLessThanOrEquals">
                                <block var="s"/>
                                <l>0</l>
                            </block>
                            <l>0</l>
                            <block var="s"/>
                        </block>
                    </block>
                    <custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 %br enviar para %s mensagem: %s">
                        <block var="PatruLINO"/>
                        <block s="reportJoinWords">
                            <list>
                                <l>l</l>
                                <block var="n"/>
                                <l>b</l>
                                <block var="s"/>
                            </list>
                        </block>
                    </custom-block>
                </script>
                <script>
                    <custom-block s="Desconectado"></custom-block>
                </script>
            </block>
        </script>
    </block-definition>
    <block-definition s="%&apos;PatruLINO&apos; LED %&apos;n&apos; intensidade %&apos;s&apos; %" type="command" category="PatruLINO">
        <header></header>
        <code></code>
        <translations></translations>
        <inputs>
            <input type="%s">PatruLINO</input>
            <input type="%s">1<options>1&#xD;2&#xD;3</options></input>
            <input type="%n">100</input>
        </inputs>
        <script>
            <block s="doIfElse">
                <custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 %br %s está conectado?">
                    <block var="PatruLINO"/>
                </custom-block>
                <script>
                    <block s="doSetVar">
                        <l>s</l>
                        <block s="reportIfElse">
                            <block s="reportLessThanOrEquals">
                                <block var="s"/>
                                <l>0</l>
                            </block>
                            <l>0</l>
                            <block var="s"/>
                        </block>
                    </block>
                    <block s="doSetVar">
                        <l>s</l>
                        <block s="reportIfElse">
                            <block s="reportGreaterThanOrEquals">
                                <block var="s"/>
                                <l>100</l>
                            </block>
                            <l>100</l>
                            <block var="s"/>
                        </block>
                    </block>
                    <custom-block s="$Patrulha-0.618-81-157-214 $EU-0.618-255-214-0 $RE-0.618-214-36-8 $KA-0.618-78-190-69 $.org-0.618-0-0-0 $:-0.681 $WebSocket-0.681 %br enviar para %s mensagem: %s">
                        <block var="PatruLINO"/>
                        <block s="reportJoinWords">
                            <list>
                                <l>l</l>
                                <block var="n"/>
                                <l>1</l>
                                <block var="s"/>
                            </list>
                        </block>
                    </custom-block>
                </script>
                <script>
                    <custom-block s="Desconectado"></custom-block>
                </script>
            </block>
        </script>
    </block-definition>
    <block-definition s="create %&apos;_scope&apos; var %&apos;_names&apos;" type="command" category="variables">
        <comment x="0" y="0" w="146" collapsed="false">This block creates  new variables on the selected scope: global (for all sprites), sprite (for this sprite only) or script (only for that blocks stack) with the names given (in &apos;names&apos; list).&#xD;&#xD;If there is already a variable with that name in that scope, it does nothing: no errors and no overwrites.</comment>
        <header></header>
        <code></code>
        <translations>pt:cria as variáveis _ _&#xD;ca:crea les _ variables _&#xD;es:crear las _ variables _&#xD;de:erstellen _ var _&#xD;</translations>
        <inputs>
            <input type="%s" readonly="true">global<options>global&#xD;sprite&#xD;script</options></input>
            <input type="%mult%txt"></input>
        </inputs>
        <script>
            <block s="doWarp">
                <script>
                    <block s="doForEach">
                        <l>_item</l>
                        <block var="_names"/>
                        <script>
                            <block s="doApplyExtension">
                                <l>var_declare(scope, name)</l>
                                <list>
                                    <block var="_scope"/>
                                    <block var="_item"/>
                                </list>
                            </block>
                        </script>
                    </block>
                </script>
            </block>
        </script>
    </block-definition>
    <block-definition s="delete var %&apos;_names&apos;" type="command" category="variables">
        <comment x="0" y="0" w="217" collapsed="false">This block deletes all the variables with the names given (inside input list).&#xD;&#xD;Each name will make only one variable deletion, and this will be the variable found following the scope order: &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos;.&#xD;&#xD;If we have a &quot;testing&quot; sprite variable and also a &quot;testing&quot; global one, deleting &quot;testing&quot; will delete only the sprite one (Yes! we can also do &quot;delete var (testing, testing)&quot; to delete both.&#xD;&#xD;If one variable does not exists (in any scope) an error happens, stopping block action in that point. You can check it before with the &quot;does var (name) exists?&quot;block. </comment>
        <header></header>
        <code></code>
        <translations>pt:remove as variáveis _&#xD;ca:esborra les variables _&#xD;es:borrar variables _&#xD;de:löschen var _&#xD;</translations>
        <inputs>
            <input type="%mult%txt"></input>
        </inputs>
        <script>
            <block s="doWarp">
                <script>
                    <block s="doForEach">
                        <l>_item</l>
                        <block var="_names"/>
                        <script>
                            <block s="doApplyExtension">
                                <l>err_ignore</l>
                                <list>
                                    <custom-block s="var %s">
                                        <block var="_item"/>
                                    </custom-block>
                                </list>
                            </block>
                            <block s="doApplyExtension">
                                <l>var_delete(name)</l>
                                <list>
                                    <block var="_item"/>
                                </list>
                            </block>
                        </script>
                    </block>
                </script>
            </block>
        </script>
    </block-definition>
    <block-definition s="set var %&apos;_name&apos; to %&apos;_value&apos;" type="command" category="variables">
        <comment x="0" y="0" w="240.4931640625" collapsed="false">This block sets the given value (last input) to the variable named with the name givent (var input).&#xD;&#xD;It looks for that variable following the scope order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos; (the first match it finds).&#xD;&#xD;If that variable does not exist (in any scope) an error happens, stopping their script. You can check it before using the &quot;does var (name) exists?&quot; block. </comment>
        <header></header>
        <code></code>
        <translations>ca:assigna a _ el valor _&#xD;es:asignar a _ el valor _&#xD;pt:altera _ para _&#xD;de:setze var _ auf _&#xD;</translations>
        <inputs>
            <input type="%s">
&#xD;<options>§_getVarNamesDict</options></input>
            <input type="%s"></input>
        </inputs>
        <script>
            <block s="doApplyExtension">
                <l>var_set(name, val)</l>
                <list>
                    <block var="_name"/>
                    <block var="_value"/>
                </list>
            </block>
        </script>
    </block-definition>
    <block-definition s="var %&apos;_name&apos;" type="reporter" category="variables">
        <comment x="0" y="0" w="178.00000000000003" collapsed="false">This block reports the value of the variable with the name given.&#xD;&#xD;It looks for that variable following the scope order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos; (the first match it finds).&#xD;&#xD;If that variable does not exist (in any scope) an error happens, stopping their script. You can check it before using the &quot;does var (name) exists?&quot; block. </comment>
        <header></header>
        <code></code>
        <translations>pt:o valor de _&#xD;</translations>
        <inputs>
            <input type="%s">
&#xD;<options>§_getVarNamesDict</options></input>
        </inputs>
        <script>
            <block s="doReport">
                <block s="reportApplyExtension">
                    <l>var_get(name)</l>
                    <list>
                        <block var="_name"/>
                    </list>
                </block>
            </block>
        </script>
    </block-definition>
    <block-definition s="does var %&apos;_name&apos; exist?" type="predicate" category="variables">
        <comment x="0" y="0" w="146" collapsed="false">This block reports &quot;true&quot; if there is a variable with this given name (input slot) in that context.&#xD;&#xD;It can be a global, sprite or script variable.&#xD;&#xD;Otherwise it reports &quot;false&quot;.</comment>
        <header></header>
        <code></code>
        <translations>pt:a variável _ existe&#xD;ca:existeix la variable _ ?&#xD;es:existe la variable _ ?&#xD;de:existiert var _ ?&#xD;</translations>
        <inputs>
            <input type="%s"></input>
        </inputs>
        <script>
            <block s="doApplyExtension">
                <l>err_try(cmd, catch, err)</l>
                <list>
                    <block s="reifyScript">
                        <script>
                            <block s="doApplyExtension">
                                <l>err_ignore</l>
                                <list>
                                    <block s="reportApplyExtension">
                                        <l>var_get(name)</l>
                                        <list>
                                            <block var="_name"/>
                                        </list>
                                    </block>
                                </list>
                            </block>
                            <block s="doReport">
                                <block s="reportBoolean">
                                    <l>
                                        <bool>true</bool>
                                    </l>
                                </block>
                            </block>
                        </script>
                        <list></list>
                    </block>
                    <block s="reifyScript">
                        <script>
                            <block s="doReport">
                                <block s="reportBoolean">
                                    <l>
                                        <bool>false</bool>
                                    </l>
                                </block>
                            </block>
                        </script>
                        <list></list>
                    </block>
                    <l></l>
                </list>
            </block>
            <block s="doApplyExtension">
                <l>err_reset</l>
                <list></list>
            </block>
        </script>
    </block-definition>
    <block-definition s="show var %&apos;_name&apos;" type="command" category="variables">
        <comment x="0" y="0" w="181" collapsed="false">This block turns on (show) the watcher view on stage (if it was not already activated) of the variable with the given name (slot input).&#xD;&#xD;It can only access to the closest variable scope (if there different variables with the same name in different scopes) following the order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos;.&#xD;&#xD;No errors if that variable does not exist.</comment>
        <header></header>
        <code></code>
        <translations>ca:mostra la variable _&#xD;es:mostrar variable _&#xD;pt:mostra a variável _&#xD;de:zeige var _&#xD;</translations>
        <inputs>
            <input type="%s">
&#xD;<options>§_getVarNamesDict</options></input>
        </inputs>
        <script>
            <block s="doApplyExtension">
                <l>var_show(name)</l>
                <list>
                    <block var="_name"/>
                </list>
            </block>
        </script>
    </block-definition>
    <block-definition s="hide var %&apos;_name&apos;" type="command" category="variables">
        <comment x="0" y="0" w="181" collapsed="false">This block turns off (hide) the watcher view on stage (if it was not already activated) of the variable with the given name (slot input).&#xD;&#xD;It can only access to the closest variable scope (if there different variables with the same name in different scopes) following the order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos;.&#xD;&#xD;No errors if that variable does not exist.</comment>
        <header></header>
        <code></code>
        <translations>ca:amaga la variable _&#xD;es:esconder variable _&#xD;pt:esconde a variável _&#xD;de:verstecke var _&#xD;</translations>
        <inputs>
            <input type="%s">&#xD;<options>§_getVarNamesDict</options></input>
        </inputs>
        <script>
            <block s="doApplyExtension">
                <l>var_hide(name)</l>
                <list>
                    <block var="_name"/>
                </list>
            </block>
        </script>
    </block-definition>
</blocks>